{"ast":null,"code":"var _jsxFileName = \"/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/components/CharacterComics.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Element } from \"react-scroll\";\nimport './../assets/CharacterCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharacterDetails = ({\n  selectedCard,\n  showModal,\n  setShowModal\n}) => {\n  _s();\n\n  const modalRef = useRef();\n\n  const closeModal = e => {\n    if (showModal.Ref.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      setShowModal(false);\n      console.log('I pressed');\n    }\n  }, [setShowModal, showModal]);\n\n  if (!selectedCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n  /*     const image = selectedCard.thumbnail.path;\n      const file = selectedCard.thumbnail.extension; */\n\n\n  const detail = selectedCard.urls.find(url => url.type === \"wiki\" || url.type === \"detail\");\n  console.log(detail);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      showModal: showModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popComics\",\n        onClick: closeModal,\n        ref: modalRef,\n        children: /*#__PURE__*/_jsxDEV(Element, {\n          id: \"CharacterDetails\",\n          className: \"containerElement\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: () => setShowModal(prev => !prev),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"characterName\",\n            children: selectedCard.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CharacterProfile\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"CharacterDesc\",\n              children: [selectedCard.description, \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                target: \"_blank\",\n                href: detail.url,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(CharacterDetails, \"qF/Pl4YcG59WwEcydEIGkeENtPI=\");\n\n_c = CharacterDetails;\nexport default CharacterDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterDetails\");","map":{"version":3,"sources":["/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/components/CharacterComics.js"],"names":["React","Element","CharacterDetails","selectedCard","showModal","setShowModal","modalRef","useRef","closeModal","e","Ref","current","target","keyPress","useCallback","key","console","log","detail","urls","find","url","type","useEffect","document","addEventListener","removeEventListener","prev","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAO,+BAAP;;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA;AAA3B,CAAD,KAA+C;AAAA;;AACpE,QAAMC,QAAQ,GAAGC,MAAM,EAAvB;;AACA,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACrB,QAAIL,SAAS,CAACM,GAAV,CAAcC,OAAd,KAA0BF,CAAC,CAACG,MAAhC,EAAuC;AACnCP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAJA;;AAKD,QAAMQ,QAAQ,GAAGC,WAAW,CAC3BL,CAAC,IAAI;AACH,QAAIA,CAAC,CAACM,GAAF,KAAU,QAAV,IAAsBX,SAA1B,EAAqC;AACnCC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,GAN0B,EAO3B,CAACZ,YAAD,EAAeD,SAAf,CAP2B,CAA5B;;AASC,MAAI,CAACD,YAAL,EAAmB;AACf,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACL;AACA;;;AACI,QAAMe,MAAM,GAAGf,YAAY,CAACgB,IAAb,CAAkBC,IAAlB,CACVC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAa,MAAb,IAAuBD,GAAG,CAACC,IAAJ,KAAa,QADlC,CAAf;AAGAN,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAK,EAAAA,SAAS,CACL,MAAM;AACJC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCZ,QAArC;AACA,WAAO,MAAMW,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCb,QAAxC,CAAb;AACD,GAJI,EAKL,CAACA,QAAD,CALK,CAAT;AAOA,sBACI;AAAA,cACCT,SAAS,gBACV;AAAK,MAAA,SAAS,EAAEA,SAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,OAAO,EAAEI,UAApC;AAAgD,QAAA,GAAG,EAAEF,QAArD;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,kBAAZ;AAA+B,UAAA,SAAS,EAAC,kBAAzC;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAwB,YAAA,OAAO,EAAE,MAAMD,YAAY,CAACsB,IAAI,IAAI,CAACA,IAAV,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,sBAA+BxB,YAAY,CAACyB;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACI;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,yBACKzB,YAAY,CAAC0B,WADlB,EAC+B,GAD/B,eAEI;AAAG,gBAAA,MAAM,EAAC,QAAV;AAAmB,gBAAA,IAAI,EAAEX,MAAM,CAACG,GAAhC;AAAA,uCACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADU,GAgBC;AAjBX,mBADJ;AAsBH,CAtDD;;GAAMnB,gB;;KAAAA,gB;AAwDN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { Element } from \"react-scroll\";\nimport './../assets/CharacterCard.css'\n\nconst CharacterDetails = ({ selectedCard, showModal, setShowModal }) => {\n    const modalRef = useRef();\n    const closeModal = e => {\n       if (showModal.Ref.current === e.target){\n           setShowModal(false);\n       }\n   }\n   const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n    if (!selectedCard) {\n        return <div></div>;\n    }\n/*     const image = selectedCard.thumbnail.path;\n    const file = selectedCard.thumbnail.extension; */\n    const detail = selectedCard.urls.find(\n        (url) => url.type === \"wiki\" || url.type === \"detail\"\n    );\n    console.log(detail);\n    useEffect(\n        () => {\n          document.addEventListener('keydown', keyPress);\n          return () => document.removeEventListener('keydown', keyPress);\n        },\n        [keyPress]\n      );\n    return (\n        <>\n        {showModal ?(\n        <div showModal={showModal} >\n            <div className=\"popComics\" onClick={closeModal} ref={modalRef} >\n                <Element id=\"CharacterDetails\" className=\"containerElement\">\n                    <span className=\"close\" onClick={() => setShowModal(prev => !prev)} >X</span>\n                    <h2 className=\"characterName\">{selectedCard.name}</h2>\n                    <div className=\"CharacterProfile\">\n                        <h3 className=\"CharacterDesc\" >\n                            {selectedCard.description}{\" \"}\n                            <a target=\"_blank\" href={detail.url}>\n                                <div></div>\n                            </a>\n                        </h3>\n                    </div>\n                </Element>\n            </div>\n        </div> ) : null} \n        </>\n       \n    );\n};\n\nexport default CharacterDetails;\n\n"]},"metadata":{},"sourceType":"module"}