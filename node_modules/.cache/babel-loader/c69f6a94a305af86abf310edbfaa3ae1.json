{"ast":null,"code":"var _jsxFileName = \"/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/components/CardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './../components/elements/body/main.css';\nimport dataMarvel from './../components/api/key';\nimport MarvelCard from './marvelCard/marvelCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardList = () => {\n  _s();\n\n  const [character, setCharacter] = useState([]);\n  useEffect(() => {\n    dataMarvel.then(getCharacter => {\n      setCharacter(getCharacter);\n    });\n  }, []);\n  const charactersArray = Object.values(character);\n\n  if (!charactersArray || charactersArray.length === 0) {\n    return '';\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: charactersArray.map(eachCharacter => /*#__PURE__*/_jsxDEV(MarvelCard, {\n        name: eachCharacter.name,\n        thumbnail: eachCharacter.thumbnail\n      }, eachCharacter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  }\n\n  ;\n};\n\n_s(CardList, \"y+oqPx3TvSl7pWAHUkjcnDIqOCo=\");\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/components/CardList.js"],"names":["React","useState","useEffect","dataMarvel","MarvelCard","CardList","character","setCharacter","then","getCharacter","charactersArray","Object","values","length","map","eachCharacter","name","thumbnail","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,wCAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,UAAU,CAACK,IAAX,CAAiBC,YAAD,IAAiB;AAC7BF,MAAAA,YAAY,CAACE,YAAD,CAAZ;AACH,KAFD;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAcN,SAAd,CAAxB;;AAEA,MAAI,CAACI,eAAD,IAAoBA,eAAe,CAACG,MAAhB,KAA2B,CAAnD,EACA;AACI,WAAO,EAAP;AACH,GAHD,MAGO;AACT,wBACM;AAAA,gBACKH,eAAe,CAACI,GAAhB,CAAqBC,aAAD,iBACjB,QAAC,UAAD;AACA,QAAA,IAAI,EAAEA,aAAa,CAACC,IADpB;AAGA,QAAA,SAAS,EAAED,aAAa,CAACE;AAHzB,SAEKF,aAAa,CAACG,EAFnB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADN;AAYD;;AAAA;AACA,CA7BD;;GAAMb,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './../components/elements/body/main.css';\nimport dataMarvel from './../components/api/key';\nimport MarvelCard from './marvelCard/marvelCard';\n\n\nconst CardList = () => {\n    const [character, setCharacter] = useState([]);\n\n    useEffect(() => {\n        dataMarvel.then((getCharacter) =>{\n            setCharacter(getCharacter);\n        });\n        \n    }, []);\n    \n    const charactersArray = Object.values(character)\n    \n    if (!charactersArray || charactersArray.length === 0)\n    {\n        return '';\n    } else {\n  return ( \n        <main>\n            {charactersArray.map((eachCharacter)=>(\n                <MarvelCard\n                name={eachCharacter.name}\n                key={eachCharacter.id}\n                thumbnail={eachCharacter.thumbnail}\n                />\n            ))}\n        </main>\n\n  );\n};\n}\nexport default CardList;\n"]},"metadata":{},"sourceType":"module"}