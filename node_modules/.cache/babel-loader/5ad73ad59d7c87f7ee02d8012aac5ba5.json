{"ast":null,"code":"var _jsxFileName = \"/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport SearchBar from './components/elements/header/search';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [characters, setCharacters] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState();\n  const [query, setQuery] = React.useState('');\n  React.useEffect(() => {\n    const API_PUB = process.env.REACT_APP_API_PUB_KEY;\n    const ts = 1;\n    const hash = '64e20774a9bc0da1b2783e768cd14567';\n    const URL_KEY = `https://gateway.marvel.com/v1/public/characters?name=${query}ts=${ts}&apikey=${API_PUB}&hash=${hash}`;\n    axios.get(URL_KEY).then(characters => {\n      setCharacters(characters.data.data.results.slice(0, 8));\n    }).catch(err => {\n      setError(err);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  const charactersArray = Object.values(characters);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error || !Array.isArray(charactersArray)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There was an error loading your data!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(SearchBar, {\n      getQuery: q => setQuery(q)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dg0w/3M8M0dBtVv7w//ZpTMUJDQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/App.js"],"names":["React","SearchBar","axios","App","characters","setCharacters","useState","loading","setLoading","error","setError","query","setQuery","useEffect","API_PUB","process","env","REACT_APP_API_PUB_KEY","ts","hash","URL_KEY","get","then","data","results","slice","catch","err","finally","charactersArray","Object","values","Array","isArray","q"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACM,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACM,QAAN,EAA1B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACM,QAAN,CAAe,EAAf,CAA1B;AAIAN,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAI;AAClB,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA5B;AACA,UAAMC,EAAE,GAAG,CAAX;AACA,UAAMC,IAAI,GAAG,kCAAb;AACA,UAAMC,OAAO,GAAI,wDAAuDT,KAAM,MAAKO,EAAG,WAAUJ,OAAQ,SAAQK,IAAK,EAArH;AAEDjB,IAAAA,KAAK,CAACmB,GAAN,CAAUD,OAAV,EACEE,IADF,CACOlB,UAAU,IACd;AAACC,MAAAA,aAAa,CAACD,UAAU,CAACmB,IAAX,CAAgBA,IAAhB,CAAqBC,OAArB,CAA6BC,KAA7B,CAAmC,CAAnC,EAAqC,CAArC,CAAD,CAAb;AACF,KAHF,EAIEC,KAJF,CAISC,GAAD,IACP;AAACjB,MAAAA,QAAQ,CAACiB,GAAD,CAAR;AAAe,KALjB,EAMEC,OANF,CAMU,MACT;AAACpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmB,KAPrB;AAQA,GAdD,EAcE,EAdF;AAgBA,QAAMqB,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc3B,UAAd,CAAxB;;AACA,MAAIG,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIE,KAAK,IAAI,CAACuB,KAAK,CAACC,OAAN,CAAcJ,eAAd,CAAd,EAA8C;AAC5C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAGK,CAAD,IAAOtB,QAAQ,CAACsB,CAAD;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAzCQ/B,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport SearchBar from './components/elements/header/search';\nimport axios from 'axios';\n\n\n\nfunction App() {\n  const [characters, setCharacters] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState();\n  const [query, setQuery] = React.useState('')\n  \n\n\n  React.useEffect(()=>{\n    const API_PUB = process.env.REACT_APP_API_PUB_KEY;\n    const ts = 1;\n    const hash = '64e20774a9bc0da1b2783e768cd14567';\n    const URL_KEY = `https://gateway.marvel.com/v1/public/characters?name=${query}ts=${ts}&apikey=${API_PUB}&hash=${hash}`;\n    \n   axios.get(URL_KEY)\n    .then(characters=>\n      {setCharacters(characters.data.data.results.slice(0,8));\n    })\n    .catch((err)=>\n    {setError(err);})\n    .finally(()=>\n    {setLoading(false);});\n  },[])\n  \n  const charactersArray = Object.values(characters)\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  \n  if (error || !Array.isArray(charactersArray)) {\n    return <p>There was an error loading your data!</p>;\n  }\n  \n\n  return (   \n    <div className=\"App\">\n      <SearchBar getQuery={(q) => setQuery(q)}/>\n\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}