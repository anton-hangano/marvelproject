{"ast":null,"code":"var _jsxFileName = \"/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/elements/header/search\";\nimport Cardlist from \"./components/CardList\";\nimport getCharacters from \"./api/marvelApi\";\nimport CharacterDetails from \"./components/CharacterComics\";\nimport { Element } from \"react-scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageFound = /image_not_available/gi;\n\nfunction App() {\n  _s();\n\n  const state = {\n    characters: [],\n    name: null,\n    offset: 0\n  };\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  useEffect(() => {\n    this.getMarvelResponse(null, null, this.state.offset);\n  }, []);\n\n  onCharacterSelect = e => {\n    this.setState({\n      selectedCard: e\n    });\n  };\n\n  onFormSubmit = e => {\n    this.getMarvelResponse(null, `&nameStartsWith=${e}`, 0);\n  };\n\n  shuffleArray = characters => {\n    for (var c = characters.length - 1; c > 0; c--) {\n      var b = Math.floor(Math.random() * (c + 1));\n      var a = characters[c];\n      characters[c] = characters[b];\n      characters[b] = a;\n    }\n\n    return characters;\n  };\n\n  getMarvelResponse = (id, name, offset) => {\n    getCharacters({\n      id: id,\n      name: name,\n      offset: offset\n    }).then(({\n      characters\n    }) => {\n      this.shuffleArray(characters);\n      this.setState({\n        characters: characters.splice(0, 12).filter(chr => !chr.thumbnail.path.match(imageFound)),\n        selectedCard: null,\n        offset: offset,\n        name: name\n      }, () => {\n        console.log(this.state.characters);\n      });\n    });\n  };\n\n  {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onFormSubmit: this.onFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Cardlist, {\n        characters: this.state.characters,\n        onCharacterSelect: this.onCharacterSelect,\n        onClick: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CharacterDetails, {\n        selectedCard: this.state.selectedCard,\n        showModal: showModal,\n        setShowModal: setShowModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        id: \"CharacterDetails\",\n        name: \"CharacterDetails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(App, \"yDc3Km869gD6lnL/d2JehHdpdes=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/App.js"],"names":["React","useState","useEffect","SearchBar","Cardlist","getCharacters","CharacterDetails","Element","imageFound","App","state","characters","name","offset","showModal","setShowModal","openModal","prev","getMarvelResponse","onCharacterSelect","e","setState","selectedCard","onFormSubmit","shuffleArray","c","length","b","Math","floor","random","a","id","then","splice","filter","chr","thumbnail","path","match","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/elements/header/search\";\nimport Cardlist from \"./components/CardList\";\nimport getCharacters from \"./api/marvelApi\";\nimport CharacterDetails from \"./components/CharacterComics\";\nimport {Element} from \"react-scroll\"\n\n\n\nconst imageFound = /image_not_available/gi;\n\nfunction App () {\n  const state = { characters: [], name: null, offset: 0}\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev)\n  }\n\n  useEffect(() => {\n    this.getMarvelResponse(null, null, this.state.offset);\n  }, []);\n\n  onCharacterSelect = (e) => {\n    this.setState({ selectedCard: e });\n  };\n  onFormSubmit = (e) => {\n    this.getMarvelResponse(null, `&nameStartsWith=${e}`, 0);\n  };\n  shuffleArray = (characters) =>  {\n    for (var c = characters.length - 1; c > 0; c--) {\n      var b = Math.floor(Math.random() * (c + 1));\n      var a = characters[c];\n      characters[c] = characters[b];\n      characters[b] = a;\n    }\n    return characters\n  };\n  getMarvelResponse = (id, name, offset) => {\n    getCharacters({\n      id: id,\n      name: name,\n      offset: offset,\n    }).then(({ characters }) => {\n      this.shuffleArray(characters)\n      this.setState(\n        {\n          characters: characters.splice(0,12).filter(\n            (chr) => !chr.thumbnail.path.match(imageFound)\n          ),      \n\n          selectedCard: null,\n          offset: offset,\n          name: name,\n        },\n        () => {\n          console.log(this.state.characters);\n        }\n      );\n    });\n  };\n  \n  {\n  return (\n    <div className=\"App\" >\n      <SearchBar onFormSubmit={this.onFormSubmit} />\n      <Cardlist\n      characters={this.state.characters}\n      onCharacterSelect={this.onCharacterSelect}\n      onClick={openModal}\n      />\n      <CharacterDetails selectedCard={this.state.selectedCard} showModal={showModal} setShowModal={setShowModal} />\n      <Element id=\"CharacterDetails\" name=\"CharacterDetails\" />\n\n    </div>\n  );\n}\n\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}