{"ast":null,"code":"var _jsxFileName = \"/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/App.js\";\nimport React from \"react\";\nimport SearchBar from \"./components/elements/header/search\";\nimport Cardlist from \"./components/CardList\";\nimport getCharacters from \"./api/marvelApi\";\nimport CharacterDetails from \"./components/CharacterComics\";\nimport { Element } from \"react-scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageFound = /image_not_available/gi;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: [],\n      name: null,\n      offset: 0\n    };\n\n    this.handleRandom = e => {\n      this.getMarvelResponse(null, null, e);\n    };\n\n    this.onCharacterSelect = e => {\n      this.setState({\n        selectedCard: e\n      });\n    };\n\n    this.onFormSubmit = e => {\n      this.getMarvelResponse(null, `&nameStartsWith=${e}`, 0);\n    };\n\n    this.shuffleArray = characters => {\n      for (var c = characters.length - 1; c > 0; c--) {\n        var b = Math.floor(Math.random() * (c + 1));\n        var a = characters[c];\n        characters[c] = characters[b];\n        characters[b] = a;\n      }\n\n      return characters;\n    };\n\n    this.getMarvelResponse = (id, name, offset) => {\n      getCharacters({\n        id: id,\n        name: name,\n        offset: offset\n      }).then(({\n        characters\n      }) => {\n        this.shuffleArray(characters);\n        this.setState.splice(0, 10)({\n          characters: characters.filter(chr => !chr.thumbnail.path.match(imageFound)),\n          selectedCard: null,\n          offset: offset,\n          name: name\n        }, () => {\n          console.log(this.state.characters);\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMarvelResponse(null, null, this.state.offset);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onFormSubmit: this.onFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Cardlist, {\n        characters: this.state.characters,\n        onCharacterSelect: this.onCharacterSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CharacterDetails, {\n        selectedCard: this.state.selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        id: \"CharacterDetails\",\n        name: \"CharacterDetails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/plumita/Desktop/Programacion/BootcampLenio/projectmarvel/src/App.js"],"names":["React","SearchBar","Cardlist","getCharacters","CharacterDetails","Element","imageFound","App","Component","state","characters","name","offset","handleRandom","e","getMarvelResponse","onCharacterSelect","setState","selectedCard","onFormSubmit","shuffleArray","c","length","b","Math","floor","random","a","id","then","splice","filter","chr","thumbnail","path","match","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SearchBar from \"./components/elements/header/search\";\nimport Cardlist from \"./components/CardList\";\nimport getCharacters from \"./api/marvelApi\";\nimport CharacterDetails from \"./components/CharacterComics\";\nimport {Element} from \"react-scroll\"\n\n\nconst imageFound = /image_not_available/gi;\n\nclass App extends React.Component {\n  state = { characters: [], name: null, offset: 0}\n\n  handleRandom = (e) => {\n    this.getMarvelResponse(null, null, e);\n  };\n  componentDidMount() {\n    this.getMarvelResponse(null, null, this.state.offset);\n  }\n\n  onCharacterSelect = (e) => {\n    this.setState({ selectedCard: e });\n  };\n  onFormSubmit = (e) => {\n    this.getMarvelResponse(null, `&nameStartsWith=${e}`, 0);\n  };\n  shuffleArray = (characters) =>  {\n    for (var c = characters.length - 1; c > 0; c--) {\n      var b = Math.floor(Math.random() * (c + 1));\n      var a = characters[c];\n      characters[c] = characters[b];\n      characters[b] = a;\n    }\n    return characters\n  };\n  getMarvelResponse = (id, name, offset) => {\n    getCharacters({\n      id: id,\n      name: name,\n      offset: offset,\n    }).then(({ characters }) => {\n      this.shuffleArray(characters)\n      this.setState.splice(0,10)(\n        {\n          characters: characters.filter(\n            (chr) => !chr.thumbnail.path.match(imageFound)\n          ),      \n\n          selectedCard: null,\n          offset: offset,\n          name: name,\n        },\n        () => {\n          console.log(this.state.characters);\n        }\n      );\n    });\n  };\n  \n  render(){\n  return (\n    <div className=\"App\" >\n      <SearchBar onFormSubmit={this.onFormSubmit} />\n      <Cardlist\n      characters={this.state.characters}\n      onCharacterSelect={this.onCharacterSelect}\n      />\n      <CharacterDetails selectedCard={this.state.selectedCard} />\n      <Element id=\"CharacterDetails\" name=\"CharacterDetails\" />\n\n    </div>\n  );\n}\n\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}